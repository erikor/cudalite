% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/zzz.R
\name{h2d}
\alias{h2d}
\alias{h2dVector}
\alias{h2dMatrix}
\title{Cuda class methods: h2dVector, h2dMatrix}
\usage{
cu <- new(Cuda) 
cu$h2dVector(x) 
ch$h2dMatrix(x)
}
\arguments{
\item{x}{Vector or Matrix (of type numeric) to load onto the device.  Memory
is automatically allocated prior to loading.}
}
\value{
An XPtr to the device pointer.  More precisely, an XPtr to a cuData
  object that encapsulates the device pointer along with the data's original
  dimensions so it can be properly formatted when subsequently retrieved.
}
\description{
Load a numeric vector or matrix to device.
}
\details{
Note that when the object returned by this function is garbage
  collected, the device memory will be automatically freed.  However, garbage
  collection occurs "sometime in the future" after the object is destroyed,
  so if you are allocating many data items on the device, you may wish to
  expliticly call the Cuda class method \code{dFree} to free it.
}
\examples{
\dontrun{
cu <- new(Cuda)

# create data vector and load on device
x <- rnorm(20)
x_dev <- cu$h2dVector(x)

# copy our data back from device
copy <- cu$d2hVector(x_dev)
all.equal(x, copy)
}
}
